EONET API v2.1 Documentation (DEPRECATED, but available)

SUMMARY:
- EONET provides access to events, categories, sources, and layers relevant to NASA event data.
- This is for v2.1; newer versions may exist.

-----------------------------------------
EVENT OBJECT (returned by Events API)

Fields:
- id: Unique event id.
- title: Title of the event.
- description: Optional, short description.
- link: URL to this specific event in the API.
- categories: One or more categories for this event.
- sources: One or more references to info about this event.
- geometries: List of date/time + location objects (GeoJSON "Point" or "Polygon"). Time usually 00:00Z unless specified.
- closed: Date/time when the event ended. May not always be accurate or present.

-----------------------------------------
CATEGORY OBJECT

Fields:
- id: Unique category id (integer).
- title: Title of the category.
- description: Brief description of category scope.
- link: API URL for this category (filtered).
- layers: Service endpoint for the Layers API, filtered by category.

Categories are used to filter events and layers.

-----------------------------------------
SOURCE OBJECT

Fields:
- id: Unique source id.
- title: Source title.
- source: Homepage URL for this source.
- link: API endpoint for events from this source.

Sources are references for where event data originated; can filter events by source.

-----------------------------------------
LAYER OBJECT

Fields:
- name: Name of the layer.
- serviceUrl: Web service base URL.
- serviceTypeId: Service type and version (e.g. WMS, WMTS, etc.).
- parameters: Optional, relevant URL parameters for service.

Layers provide imagery for data categories; used for mapping, visualization, etc.

-----------------------------------------
EVENTS API ENDPOINT

Base URL:
https://eonet.gsfc.nasa.gov/api/v2.1/events

Parameters:
- source: Filter by source id(s), comma separated. (Boolean OR logic)
  Example: ?source=InciWeb,EO
- status: "open" | "closed". Only open or only closed events. Omit for currently open.
  Example: ?status=open
- limit: Maximum number of events returned.
  Example: ?limit=5
- days: Number of days back from today to include.
  Example: ?days=20

Full Example:
https://eonet.gsfc.nasa.gov/api/v2.1/events?limit=5&days=20&source=InciWeb&status=open
(Returns 5 most recent open events in the last 20 days from InciWeb source.)

-----------------------------------------
CATEGORIES API ENDPOINT

Base URL:
https://eonet.gsfc.nasa.gov/api/v2.1/categories

Parameters:
- (Path) Category ID: Filter events by specific category.
  Example: /categories/8 or /categories/14
- source: Filter by source(s), comma separated.
  Example: /categories/8?source=InciWeb
- status: "open" | "closed".
  Example: /categories/8?status=open
- limit: Limit number of returned events.
  Example: /categories/8?limit=5
- days: Limit number of days included.
  Example: /categories/8?days=20

-----------------------------------------
LAYERS API ENDPOINT

Base URL:
https://eonet.gsfc.nasa.gov/api/v2.1/layers

Parameters:
- (Path) Category ID: Filter layers by category.
  Example: /layers/8 or /layers/14

-----------------------------------------
ADDITIONAL NOTES

- All filter parameters are optional unless specified.
- Geometries field: GeoJSON format (type "Point" or "Polygon") for each event instance.
- "closed" field may not always be accurate for absolute event ending.
- Version 2.1 is deprecated but still accessible; expect future decommission.
- Refer to categories JSON, sources JSON, and layers JSON for valid filter values.

END OF DOCUMENTATION


DONKI (Space Weather Database Of Notifications, Knowledge, Information)

Summary:
- DONKI is an online tool for space weather data, event notifications, analysis, and knowledge base.
- Used by space weather forecasters, scientists, and the space science community.
- Offers API access to data, events, models, forecasts, notifications, and more.

API COMPONENT SERVICES AND EXAMPLES:

1. Coronal Mass Ejection (CME)
   - Endpoint: https://api.nasa.gov/DONKI/CME
   - Params: startDate, endDate, api_key
   - Example: https://api.nasa.gov/DONKI/CME?startDate=yyyy-MM-dd&endDate=yyyy-MM-dd&api_key=DEMO_KEY

2. CME Analysis
   - Endpoint: https://api.nasa.gov/DONKI/CMEAnalysis
   - Params: startDate, endDate, mostAccurateOnly, completeEntryOnly, speed, halfAngle, catalog, keyword, api_key
   - Example: https://api.nasa.gov/DONKI/CMEAnalysis?startDate=2016-09-01&endDate=2016-09-30&mostAccurateOnly=true&speed=500&halfAngle=30&catalog=ALL&api_key=DEMO_KEY
   - Defaults:
      startDate: 30 days before now
      endDate: now
      mostAccurateOnly: true
      completeEntryOnly: true
      speed: 0
      halfAngle: 0
      catalog: ALL (ALL, SWRC_CATALOG, JANG_ET_AL_CATALOG)
      keyword: NONE

3. Geomagnetic Storm (GST)
   - Endpoint: https://api.nasa.gov/DONKI/GST
   - Params: startDate, endDate, api_key
   - Example: https://api.nasa.gov/DONKI/GST?startDate=yyyy-MM-dd&endDate=yyyy-MM-dd&api_key=DEMO_KEY

4. Interplanetary Shock (IPS)
   - Endpoint: https://api.nasa.gov/DONKI/IPS
   - Params: startDate, endDate, location, catalog, api_key
   - Example: https://api.nasa.gov/DONKI/IPS?startDate=yyyy-MM-dd&endDate=yyyy-MM-dd&location=LOCATION&catalog=CATALOG&api_key=DEMO_KEY
   - Defaults:
      location: ALL (Earth, MESSENGER, STEREO A, STEREO B)
      catalog: ALL (SWRC_CATALOG, WINSLOW_MESSENGER_ICME_CATALOG)

5. Solar Flare (FLR)
   - Endpoint: https://api.nasa.gov/DONKI/FLR
   - Params: startDate, endDate, api_key
   - Example: https://api.nasa.gov/DONKI/FLR?startDate=yyyy-MM-dd&endDate=yyyy-MM-dd&api_key=DEMO_KEY

6. Solar Energetic Particle (SEP)
   - Endpoint: https://api.nasa.gov/DONKI/SEP
   - Params: startDate, endDate, api_key
   - Example: https://api.nasa.gov/DONKI/SEP?startDate=yyyy-MM-dd&endDate=yyyy-MM-dd&api_key=DEMO_KEY

7. Magnetopause Crossing (MPC)
   - Endpoint: https://api.nasa.gov/DONKI/MPC
   - Params: startDate, endDate, api_key
   - Example: https://api.nasa.gov/DONKI/MPC?startDate=yyyy-MM-dd&endDate=yyyy-MM-dd&api_key=DEMO_KEY

8. Radiation Belt Enhancement (RBE)
   - Endpoint: https://api.nasa.gov/DONKI/RBE
   - Params: startDate, endDate, api_key
   - Example: https://api.nasa.gov/DONKI/RBE?startDate=yyyy-MM-dd&endDate=yyyy-MM-dd&api_key=DEMO_KEY

9. High Speed Stream (HSS)
   - Endpoint: https://api.nasa.gov/DONKI/HSS
   - Params: startDate, endDate, api_key
   - Example: https://api.nasa.gov/DONKI/HSS?startDate=yyyy-MM-dd&endDate=yyyy-MM-dd&api_key=DEMO_KEY

10. WSA+EnlilSimulation
   - Endpoint: https://api.nasa.gov/DONKI/WSAEnlilSimulations
   - Params: startDate, endDate, api_key
   - Example: https://api.nasa.gov/DONKI/WSAEnlilSimulations?startDate=2016-01-06&endDate=2016-01-06&api_key=DEMO_KEY
   - Defaults:
      startDate: 7 days before now
      endDate: now

11. Notifications
   - Endpoint: https://api.nasa.gov/DONKI/notifications
   - Params: startDate, endDate, type, api_key
   - Example: https://api.nasa.gov/DONKI/notifications?startDate=2014-05-01&endDate=2014-05-08&type=all&api_key=DEMO_KEY
   - Defaults:
      startDate: 7 days before now
      endDate: now
      type: all (choices: all, FLR, SEP, CME, IPS, MPC, GST, RBE, report)
      Request date range max: 30 days (if exceeded, will auto-limit to last 30 days)

-----------------------------------------------
PARAMETER DEFAULTS SUMMARY:
- For most endpoints, startDate defaults to 30 days before today, endDate defaults to today (current UTC date).
- For WSA+EnlilSimulation: startDate defaults to 7 days before today, endDate defaults to today.
- For Notifications: if dates omitted, defaults to last 7 days.

-----------------------------------------------
EXAMPLES:
- CME:
  https://api.nasa.gov/DONKI/CME?startDate=2024-05-01&endDate=2024-06-01&api_key=DEMO_KEY
- CME Analysis:
  https://api.nasa.gov/DONKI/CMEAnalysis?startDate=2016-09-01&endDate=2016-09-30&mostAccurateOnly=true&speed=500&halfAngle=30&catalog=ALL&api_key=DEMO_KEY
- Notifications:
  https://api.nasa.gov/DONKI/notifications?startDate=2014-05-01&endDate=2014-05-08&type=all&api_key=DEMO_KEY

-----------------------------------------------
NOTES:
- All endpoints require an API key (replace DEMO_KEY).
- All dates must be in yyyy-MM-dd (UTC).
- If a request date range exceeds 30 days, the API will limit the result to the last 30 days.
- For more details on available parameters and options, refer to NASA's DONKI API documentation.

END OF DOCUMENTATION


Astronomy Picture of the Day (APOD) Microservice API Documentation

SUMMARY:
- Microservice in Python/Flask, reorganized for AWS Elastic Beanstalk deployment.
- API returns content from the Astronomy Picture of the Day (APOD) website.
- If reliability is essential, self-hosting is recommended.

-----------------------------
API USAGE

Endpoint: /<version>/apod

Supported query parameters (GET):
- api_key: Required. Obtain at https://api.nasa.gov/#signUp. Example: DEMO_KEY
- date: Optional. Format YYYY-MM-DD. Date of APOD image. Defaults to today. Must be after 1995-06-16.
- concept_tags: Optional. Boolean True|False. If true, returns concept tags derived from description text. Defaults to False.
- hd: Optional. Boolean True|False. Always ignored; high-resolution URLs returned if available.
- count: Optional. Integer (max 100). If specified, returns count randomly chosen images as JSON array. Cannot use with date, start_date, or end_date.
- start_date: Optional. YYYY-MM-DD. Start of date range. Returns all images from start_date to end_date as JSON array. Cannot use with date.
- end_date: Optional. YYYY-MM-DD. End of date range. If omitted, defaults to today.
- thumbs: Optional. Boolean True|False. If true and APOD is video, returns video thumbnail URL.

-----------------------------
RETURNED FIELDS (JSON response)

- resource: Object describing image_set or planet shown.
- concept_tags: Boolean value matching the query param.
- title: Title of the image.
- date: Date of the image.
- url: URL of the APOD image or video.
- hdurl: URL of the high-resolution image (may be omitted).
- media_type: "image" or "video".
- explanation: Text explanation of the APOD.
- concepts: Most relevant concepts (only if concept_tags=True).
- thumbnail_url: Video thumbnail URL (if APOD is a video and thumbs=True).
- copyright: Copyright holder.
- service_version: Version of the microservice used.

-----------------------------
EXAMPLES

Single image by date:
localhost:5000/v1/apod?api_key=DEMO_KEY&date=2014-10-01&concept_tags=True

Random images:
https://api.nasa.gov/planetary/apod?api_key=DEMO_KEY&count=5

Images for a date range:
https://api.nasa.gov/planetary/apod?api_key=DEMO_KEY&start_date=2017-07-08&end_date=2017-07-10

-----------------------------
COPYRIGHT

- If re-displaying imagery, check for a copyright field.
- Content without copyright is generally NASA/public domain.
- Refer to the APOD website for more image permissions info.

-----------------------------
APOD PARSER

- The APOD Parser is a helper for using the APOD API in Python.
- Found in the apod_parser folder.

Example Usage:
  1. Import apod_object_parser.py
  2. Call: response = apod_object_parser.get_data(<your_api_key>)
  3. Use:
     - apod_object_parser.get_date(response)
     - apod_object_parser.get_explaination(response)
     - apod_object_parser.get_hdurl(response)
     - apod_object_parser.get_media_type(response)
     - apod_object_parser.get_service_version(response)
     - apod_object_parser.get_title(response)
     - apod_object_parser.get_url(response)

- More details in the parser README.

-----------------------------
DEPLOYMENT

- Deployed on AWS Elastic Beanstalk.
- Master branch is for development, eb branch is for deployment.
- Can be run locally with standard Python, virtualenv, conda, or Docker.

-----------------------------
FEEDBACK & CONTRIBUTING

- Feedback via GitHub issues.
- Star the repo if useful.
- Pull requests are accepted.
- The maintainers cannot resolve APOD website/content issues.

-----------------------------
AUTHORSHIP

- Brian Thomas (based on code by Dan Hammer)
- Justin Gosses (AWS support)
- See repository contributors list for more.

END OF DOCUMENTATION
